name: Build

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            exe_name: timsync
            platform: linux.x86_64
          - os: macos-latest
            exe_name: timsync
            platform: macos.x86_64
          - os: windows-latest
            exe_name: timsync.exe
            platform: windows.x64.exe
      
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --release --verbose
    - name: Rename asset
      run: |
        mkdir artifacts
        cp target/release/${{ matrix.exe_name }} artifacts/timsync.${{ matrix.platform }}
    - name: Collect artifacts
      uses: actions/upload-artifact@v3
      with:
        name: timsync.${{ matrix.platform }}
        path: artifacts/timsync.${{ matrix.platform }}

  collect:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build

    permissions:
      contents: write
      packages: write
  
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          path: artifacts
      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "ci"
          prerelease: true
          title: "CI build"
          files: artifacts/*.*
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: CI build
#        draft: false
#        prerelease: true
#    - name: Run tests
#      run: cargo test --verbose
